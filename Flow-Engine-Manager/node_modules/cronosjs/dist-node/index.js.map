{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/parser.js","../dist-src/date.js","../dist-src/expression.js","../dist-src/scheduler.js","../dist-src/index.js"],"sourcesContent":["export const sortAsc = (a, b) => a - b;\r\n//# sourceMappingURL=utils.js.map","import { CronosExpression } from './expression';\r\nimport { sortAsc } from './utils';\r\nconst predefinedCronStrings = {\r\n    '@yearly': '0 0 0 1 1 * *',\r\n    '@annually': '0 0 0 1 1 * *',\r\n    '@monthly': '0 0 0 1 * * *',\r\n    '@weekly': '0 0 0 * * 0 *',\r\n    '@daily': '0 0 0 * * * *',\r\n    '@midnight': '0 0 0 * * * *',\r\n    '@hourly': '0 0 * * * * *',\r\n};\r\nconst monthReplacements = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\r\nconst monthReplacementRegex = new RegExp(monthReplacements.join('|'), 'g');\r\nconst dayOfWeekReplacements = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\r\nconst dayOfWeekReplacementRegex = new RegExp(dayOfWeekReplacements.join('|'), 'g');\r\n/*\r\n\"The actual range of times supported by ECMAScript Date objects is slightly smaller:\r\n  exactly â€“100,000,000 days to 100,000,000 days measured relative to midnight at the\r\n  beginning of 01 January, 1970 UTC. This gives a range of 8,640,000,000,000,000\r\n  milliseconds to either side of 01 January, 1970 UTC.\"\r\nhttp://ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\r\n\r\nnew Date(8640000000000000) => 00:00:00 13th Sep 275760\r\nLargest full year valid as JS date = 275759\r\n*/\r\nconst maxValidYear = 275759;\r\nexport function _parse(cronstring) {\r\n    let expr = cronstring.trim().toLowerCase();\r\n    if (predefinedCronStrings[expr]) {\r\n        expr = predefinedCronStrings[expr];\r\n    }\r\n    const fields = expr.split(/\\s+/g);\r\n    if (fields.length < 5 || fields.length > 7) {\r\n        throw new Error('Expression must have at least 5 fields, and no more than 7 fields');\r\n    }\r\n    switch (fields.length) {\r\n        case 5:\r\n            fields.unshift('0');\r\n        case 6:\r\n            fields.push('*');\r\n    }\r\n    return new CronosExpression(cronstring, new SecondsOrMinutesField(fields[0]).values, new SecondsOrMinutesField(fields[1]).values, new HoursField(fields[2]).values, new DaysField(fields[3], fields[5]).values, new MonthsField(fields[4]).values, new YearsField(fields[6]));\r\n}\r\nclass Field {\r\n    constructor(field) {\r\n        this.field = field;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, this.first, this.last, true));\r\n    }\r\n    get items() {\r\n        if (!this._items)\r\n            this._items = this.parse();\r\n        return this._items;\r\n    }\r\n    get values() {\r\n        return Field.getValues(this.items, this.first, this.last);\r\n    }\r\n    static getValues(items, first, last) {\r\n        return Array.from(new Set(items.reduce((values, item) => {\r\n            values.push(...item.values(first, last));\r\n            return values;\r\n        }, []))).sort(sortAsc);\r\n    }\r\n}\r\nclass FieldItem {\r\n    constructor() {\r\n        this.step = 1;\r\n    }\r\n    values(first, last) {\r\n        const start = this.range ? this.range.from : first, end = (this.range && this.range.to !== undefined) ? this.range.to : last, rangeLength = (end < start) ? ((last - start) + (end - first) + 1) : (end - start);\r\n        return Array(Math.floor(rangeLength / this.step) + 1)\r\n            .fill(0)\r\n            .map((_, i) => first + ((start - first + (this.step * i)) % (last - first + 1)));\r\n    }\r\n    get any() {\r\n        return this.range === undefined && this.step === 1;\r\n    }\r\n    get single() {\r\n        return !!this.range && this.range.from === this.range.to;\r\n    }\r\n    static parse(item, first, last, allowCyclicRange = false, transformer) {\r\n        const fieldItem = new FieldItem();\r\n        const [match, all, startFrom, range, step] = (item.match(/^(?:(\\*)|([0-9]+)|([0-9]+-[0-9]+))(?:\\/([1-9][0-9]*))?$/) || []);\r\n        if (!match)\r\n            throw new Error('Field item invalid format');\r\n        if (step) {\r\n            fieldItem.step = parseInt(step, 10);\r\n        }\r\n        if (startFrom) {\r\n            let start = parseInt(startFrom, 10);\r\n            start = transformer ? transformer(start) : start;\r\n            if (start < first || start > last)\r\n                throw new Error('Field item out of valid value range');\r\n            fieldItem.range = {\r\n                from: start,\r\n                to: step ? undefined : start\r\n            };\r\n        }\r\n        else if (range) {\r\n            const [rangeStart, rangeEnd] = range.split('-').map(x => {\r\n                const n = parseInt(x, 10);\r\n                return transformer ? transformer(n) : n;\r\n            });\r\n            if (rangeStart < first || rangeStart > last || rangeEnd < first || rangeEnd > last ||\r\n                (rangeEnd < rangeStart && !allowCyclicRange)) {\r\n                throw new Error('Field item range invalid, either value out of valid range or start greater than end in non wraparound field');\r\n            }\r\n            fieldItem.range = {\r\n                from: rangeStart,\r\n                to: rangeEnd\r\n            };\r\n        }\r\n        return fieldItem;\r\n    }\r\n}\r\nexport class SecondsOrMinutesField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 59;\r\n    }\r\n}\r\nexport class HoursField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 23;\r\n    }\r\n}\r\nexport class DaysField {\r\n    constructor(daysOfMonthField, daysOfWeekField) {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.daysItems = [];\r\n        this.nearestWeekdayItems = [];\r\n        this.daysOfWeekItems = [];\r\n        this.lastDaysOfWeekItems = [];\r\n        this.nthDaysOfWeekItems = [];\r\n        for (let item of daysOfMonthField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            if (item === 'l') {\r\n                this.lastDay = true;\r\n            }\r\n            else if (item === 'lw') {\r\n                this.lastWeekday = true;\r\n            }\r\n            else if (item.endsWith('w')) {\r\n                this.nearestWeekdayItems.push(FieldItem.parse(item.slice(0, -1), 1, 31));\r\n            }\r\n            else {\r\n                this.daysItems.push(FieldItem.parse(item, 1, 31));\r\n            }\r\n        }\r\n        const normalisedDaysOfWeekField = daysOfWeekField.replace(dayOfWeekReplacementRegex, match => dayOfWeekReplacements.indexOf(match) + '');\r\n        const parseDayOfWeek = (item) => FieldItem.parse(item, 0, 6, true, n => n === 7 ? 0 : n);\r\n        for (let item of normalisedDaysOfWeekField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            const nthIndex = item.lastIndexOf('#');\r\n            if (item.endsWith('l')) {\r\n                this.lastDaysOfWeekItems.push(parseDayOfWeek(item.slice(0, -1)));\r\n            }\r\n            else if (nthIndex !== -1) {\r\n                const nth = item.slice(nthIndex + 1);\r\n                if (!/^[1-5]$/.test(nth))\r\n                    throw new Error('Field item nth of month (#) invalid');\r\n                this.nthDaysOfWeekItems.push({\r\n                    item: parseDayOfWeek(item.slice(0, nthIndex)),\r\n                    nth: parseInt(nth, 10)\r\n                });\r\n            }\r\n            else {\r\n                this.daysOfWeekItems.push(parseDayOfWeek(item));\r\n            }\r\n        }\r\n    }\r\n    get values() {\r\n        return DaysFieldValues.fromField(this);\r\n    }\r\n    get allDays() {\r\n        return (!this.lastDay &&\r\n            !this.lastWeekday &&\r\n            !this.nearestWeekdayItems.length &&\r\n            !this.lastDaysOfWeekItems.length &&\r\n            !this.nthDaysOfWeekItems.length &&\r\n            this.daysItems.length === 1 && this.daysItems[0].any &&\r\n            this.daysOfWeekItems.length === 1 && this.daysOfWeekItems[0].any);\r\n    }\r\n}\r\nexport class DaysFieldValues {\r\n    constructor() {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.days = [];\r\n        this.nearestWeekday = [];\r\n        this.daysOfWeek = [];\r\n        this.lastDaysOfWeek = [];\r\n        this.nthDaysOfWeek = [];\r\n    }\r\n    static fromField(field) {\r\n        const values = new DaysFieldValues();\r\n        const filterAnyItems = (items) => items.filter(item => !item.any);\r\n        values.lastDay = field.lastDay;\r\n        values.lastWeekday = field.lastWeekday;\r\n        values.days = Field.getValues(field.allDays ? [new FieldItem()] : filterAnyItems(field.daysItems), 1, 31);\r\n        values.nearestWeekday = Field.getValues(field.nearestWeekdayItems, 1, 31);\r\n        values.daysOfWeek = Field.getValues(filterAnyItems(field.daysOfWeekItems), 0, 6);\r\n        values.lastDaysOfWeek = Field.getValues(field.lastDaysOfWeekItems, 0, 6);\r\n        const nthDaysHashes = new Set();\r\n        for (let item of field.nthDaysOfWeekItems) {\r\n            for (let n of item.item.values(0, 6)) {\r\n                let hash = n * 10 + item.nth;\r\n                if (!nthDaysHashes.has(hash)) {\r\n                    nthDaysHashes.add(hash);\r\n                    values.nthDaysOfWeek.push([n, item.nth]);\r\n                }\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n    getDays(year, month) {\r\n        const days = new Set(this.days);\r\n        const lastDateOfMonth = new Date(year, month, 0).getDate();\r\n        const firstDayOfWeek = new Date(year, month - 1, 1).getDay();\r\n        const getNearestWeekday = (day) => {\r\n            if (day > lastDateOfMonth)\r\n                day = lastDateOfMonth;\r\n            const dayOfWeek = (day + firstDayOfWeek - 1) % 7;\r\n            let weekday = day + (dayOfWeek === 0 ? 1 : (dayOfWeek === 6 ? -1 : 0));\r\n            return weekday + (weekday < 1 ? 3 : (weekday > lastDateOfMonth ? -3 : 0));\r\n        };\r\n        if (this.lastDay) {\r\n            days.add(lastDateOfMonth);\r\n        }\r\n        if (this.lastWeekday) {\r\n            days.add(getNearestWeekday(lastDateOfMonth));\r\n        }\r\n        for (const day of this.nearestWeekday) {\r\n            days.add(getNearestWeekday(day));\r\n        }\r\n        if (this.daysOfWeek.length ||\r\n            this.lastDaysOfWeek.length ||\r\n            this.nthDaysOfWeek.length) {\r\n            const daysOfWeek = Array(7).fill(0).map(() => ([]));\r\n            for (let day = 1; day < 36; day++) {\r\n                daysOfWeek[(day + firstDayOfWeek - 1) % 7].push(day);\r\n            }\r\n            for (const dayOfWeek of this.daysOfWeek) {\r\n                for (const day of daysOfWeek[dayOfWeek]) {\r\n                    days.add(day);\r\n                }\r\n            }\r\n            for (const dayOfWeek of this.lastDaysOfWeek) {\r\n                for (let i = daysOfWeek[dayOfWeek].length - 1; i >= 0; i--) {\r\n                    if (daysOfWeek[dayOfWeek][i] <= lastDateOfMonth) {\r\n                        days.add(daysOfWeek[dayOfWeek][i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (const [dayOfWeek, nthOfMonth] of this.nthDaysOfWeek) {\r\n                days.add(daysOfWeek[dayOfWeek][nthOfMonth - 1]);\r\n            }\r\n        }\r\n        return Array.from(days).filter(day => day <= lastDateOfMonth).sort(sortAsc);\r\n    }\r\n}\r\nexport class MonthsField extends Field {\r\n    constructor(field) {\r\n        super(field.replace(monthReplacementRegex, match => {\r\n            return monthReplacements.indexOf(match) + 1 + '';\r\n        }));\r\n        this.first = 1;\r\n        this.last = 12;\r\n    }\r\n}\r\nexport class YearsField extends Field {\r\n    constructor(field) {\r\n        super(field);\r\n        this.first = 1970;\r\n        this.last = 2099;\r\n        this.items;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, 0, maxValidYear));\r\n    }\r\n    nextYear(fromYear) {\r\n        return this.items.reduce((years, item) => {\r\n            if (item.any)\r\n                years.push(fromYear);\r\n            else if (item.single) {\r\n                const year = item.range.from;\r\n                if (year >= fromYear)\r\n                    years.push(year);\r\n            }\r\n            else {\r\n                const start = item.range && item.range.from || this.first;\r\n                if (start > fromYear)\r\n                    years.push(start);\r\n                else {\r\n                    const nextYear = start + Math.ceil((fromYear - start) / item.step) * item.step;\r\n                    if (nextYear <= (item.range && item.range.to || maxValidYear))\r\n                        years.push(nextYear);\r\n                }\r\n            }\r\n            return years;\r\n        }, []).sort(sortAsc)[0] || null;\r\n    }\r\n}\r\n//# sourceMappingURL=parser.js.map","export class CronosDate {\r\n    constructor(year, month = 1, day = 1, hour = 0, minute = 0, second = 0) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n    static fromDate(date, timezone) {\r\n        if (!timezone) {\r\n            return new CronosDate(date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        return timezone['nativeDateToCronosDate'](date);\r\n    }\r\n    toDate(timezone) {\r\n        if (!timezone) {\r\n            return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n        }\r\n        return timezone['cronosDateToNativeDate'](this);\r\n    }\r\n    static fromUTCTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return new CronosDate(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n    }\r\n    toUTCTimestamp() {\r\n        return Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n    }\r\n    copyWith({ year = this.year, month = this.month, day = this.day, hour = this.hour, minute = this.minute, second = this.second } = {}) {\r\n        return new CronosDate(year, month, day, hour, minute, second);\r\n    }\r\n}\r\n// Adapted from Intl.DateTimeFormat timezone handling in https://github.com/moment/luxon\r\nconst ZoneCache = new Map();\r\nexport class CronosTimezone {\r\n    constructor(IANANameOrOffset) {\r\n        if (typeof IANANameOrOffset === 'number') {\r\n            if (IANANameOrOffset > 840 || IANANameOrOffset < -840)\r\n                throw new Error('Invalid offset');\r\n            this.fixedOffset = IANANameOrOffset;\r\n            return this;\r\n        }\r\n        const offsetMatch = IANANameOrOffset.match(/^([+-]?)(0[1-9]|1[0-4])(?::?([0-5][0-9]))?$/);\r\n        if (offsetMatch) {\r\n            this.fixedOffset = (offsetMatch[1] === '-' ? -1 : 1) * ((parseInt(offsetMatch[2], 10) * 60) + (parseInt(offsetMatch[3], 10) || 0));\r\n            return this;\r\n        }\r\n        if (ZoneCache.has(IANANameOrOffset)) {\r\n            return ZoneCache.get(IANANameOrOffset);\r\n        }\r\n        try {\r\n            this.dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\r\n                hour12: false,\r\n                timeZone: IANANameOrOffset,\r\n                year: \"numeric\",\r\n                month: \"2-digit\",\r\n                day: \"2-digit\",\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                second: \"2-digit\"\r\n            });\r\n        }\r\n        catch (err) {\r\n            throw new Error('Invalid IANA name or offset');\r\n        }\r\n        this.zoneName = IANANameOrOffset;\r\n        const currentYear = new Date().getUTCFullYear();\r\n        this.winterOffset = this.offset(Date.UTC(currentYear, 0, 1));\r\n        this.summerOffset = this.offset(Date.UTC(currentYear, 5, 1));\r\n        ZoneCache.set(IANANameOrOffset, this);\r\n    }\r\n    toString() {\r\n        if (this.fixedOffset) {\r\n            const absOffset = Math.abs(this.fixedOffset);\r\n            return [\r\n                this.fixedOffset < 0 ? '-' : '+',\r\n                Math.floor(absOffset / 60).toString().padStart(2, '0'),\r\n                (absOffset % 60).toString().padStart(2, '0')\r\n            ].join('');\r\n        }\r\n        return this.zoneName;\r\n    }\r\n    offset(ts) {\r\n        if (!this.dateTimeFormat)\r\n            return this.fixedOffset || 0;\r\n        const date = new Date(ts);\r\n        const { year, month, day, hour, minute, second } = this.nativeDateToCronosDate(date);\r\n        const asUTC = Date.UTC(year, month - 1, day, hour, minute, second), asTS = ts - (ts % 1000);\r\n        return (asUTC - asTS) / 60000;\r\n    }\r\n    nativeDateToCronosDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return CronosDate['fromUTCTimestamp'](date.getTime() + (this.fixedOffset || 0) * 60000);\r\n        }\r\n        return this.dateTimeFormat.formatToParts\r\n            ? partsOffset(this.dateTimeFormat, date)\r\n            : hackyOffset(this.dateTimeFormat, date);\r\n    }\r\n    cronosDateToNativeDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return new Date(date['toUTCTimestamp']() - (this.fixedOffset || 0) * 60000);\r\n        }\r\n        const provisionalOffset = ((date.month > 3 || date.month < 11) ? this.summerOffset : this.winterOffset) || 0;\r\n        const UTCTimestamp = date['toUTCTimestamp']();\r\n        // Find the right offset a given local time.\r\n        // Our UTC time is just a guess because our offset is just a guess\r\n        let utcGuess = UTCTimestamp - provisionalOffset * 60000;\r\n        // Test whether the zone matches the offset for this ts\r\n        const o2 = this.offset(utcGuess);\r\n        // If so, offset didn't change and we're done\r\n        if (provisionalOffset === o2)\r\n            return new Date(utcGuess);\r\n        // If not, change the ts by the difference in the offset\r\n        utcGuess -= (o2 - provisionalOffset) * 60000;\r\n        // If that gives us the local time we want, we're done\r\n        const o3 = this.offset(utcGuess);\r\n        if (o2 === o3)\r\n            return new Date(utcGuess);\r\n        // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\r\n        return new Date(UTCTimestamp - Math.min(o2, o3) * 60000);\r\n    }\r\n}\r\nfunction hackyOffset(dtf, date) {\r\n    const formatted = dtf.format(date).replace(/\\u200E/g, \"\"), parsed = formatted.match(/(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/), [, month, day, year, hour, minute, second] = (parsed || []).map(n => parseInt(n, 10));\r\n    return new CronosDate(year, month, day, hour, minute, second);\r\n}\r\nfunction partsOffset(dtf, date) {\r\n    const formatted = dtf.formatToParts(date);\r\n    return new CronosDate(parseInt(formatted[4].value, 10), parseInt(formatted[0].value, 10), parseInt(formatted[2].value, 10), parseInt(formatted[6].value, 10), parseInt(formatted[8].value, 10), parseInt(formatted[10].value, 10));\r\n}\r\n//# sourceMappingURL=date.js.map","import { _parse } from './parser';\r\nimport { CronosDate, CronosTimezone } from './date';\r\nconst hourinms = 60 * 60 * 1000;\r\nconst findFirstFrom = (from, list) => list.findIndex(n => n >= from);\r\nexport class CronosExpression {\r\n    constructor(cronString, seconds, minutes, hours, days, months, years) {\r\n        this.cronString = cronString;\r\n        this.seconds = seconds;\r\n        this.minutes = minutes;\r\n        this.hours = hours;\r\n        this.days = days;\r\n        this.months = months;\r\n        this.years = years;\r\n        this.skipRepeatedHour = true;\r\n        this.missingHour = 'insert';\r\n    }\r\n    static parse(cronstring, options = {}) {\r\n        const expr = _parse(cronstring);\r\n        expr.timezone = options.timezone instanceof CronosTimezone ? options.timezone :\r\n            (options.timezone !== undefined ? new CronosTimezone(options.timezone) : undefined);\r\n        expr.skipRepeatedHour = options.skipRepeatedHour !== undefined ? options.skipRepeatedHour : expr.skipRepeatedHour;\r\n        expr.missingHour = options.missingHour || expr.missingHour;\r\n        return expr;\r\n    }\r\n    toString() {\r\n        const showTzOpts = !this.timezone || this.timezone.zoneName;\r\n        const timezone = Object.entries({\r\n            tz: this.timezone && this.timezone.toString() || 'Local',\r\n            skipRepeatedHour: showTzOpts && this.skipRepeatedHour.toString(),\r\n            missingHour: showTzOpts && this.missingHour,\r\n        }).map(([key, val]) => val && key + ': ' + val).filter(s => s).join(', ');\r\n        return `${this.cronString} (${timezone})`;\r\n    }\r\n    nextDate(afterDate = new Date()) {\r\n        const fromCronosDate = CronosDate.fromDate(afterDate, this.timezone);\r\n        if (this.timezone && this.timezone.fixedOffset !== undefined) {\r\n            return this._next(fromCronosDate).date;\r\n        }\r\n        const fromTimestamp = afterDate.getTime(), fromLocalTimestamp = fromCronosDate['toUTCTimestamp'](), prevHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp - hourinms), this.timezone)['toUTCTimestamp'](), nextHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp + hourinms), this.timezone)['toUTCTimestamp'](), nextHourRepeated = nextHourLocalTimestamp - fromLocalTimestamp === 0, thisHourRepeated = fromLocalTimestamp - prevHourLocalTimestamp === 0, thisHourMissing = fromLocalTimestamp - prevHourLocalTimestamp === hourinms * 2;\r\n        if (this.skipRepeatedHour && thisHourRepeated) {\r\n            return this._next(fromCronosDate.copyWith({ minute: 59, second: 60 }), false).date;\r\n        }\r\n        if (this.missingHour === 'offset' && thisHourMissing) {\r\n            const nextDate = this._next(fromCronosDate.copyWith({ hour: fromCronosDate.hour - 1 })).date;\r\n            if (!nextDate || nextDate.getTime() > fromTimestamp)\r\n                return nextDate;\r\n        }\r\n        let { date: nextDate, cronosDate: nextCronosDate } = this._next(fromCronosDate);\r\n        if (this.missingHour !== 'offset' && nextCronosDate && nextDate) {\r\n            const nextDateNextHourTimestamp = nextCronosDate.copyWith({ hour: nextCronosDate.hour + 1 }).toDate(this.timezone).getTime();\r\n            if (nextDateNextHourTimestamp === nextDate.getTime()) {\r\n                if (this.missingHour === 'insert') {\r\n                    return nextCronosDate.copyWith({ minute: 0, second: 0 }).toDate(this.timezone);\r\n                }\r\n                // this.missingHour === 'skip'\r\n                return this._next(nextCronosDate.copyWith({ minute: 59, second: 59 })).date;\r\n            }\r\n        }\r\n        if (!this.skipRepeatedHour) {\r\n            if (nextHourRepeated && (!nextDate || (nextDate.getTime() > fromTimestamp + hourinms))) {\r\n                nextDate = this._next(fromCronosDate.copyWith({ minute: 0, second: 0 }), false).date;\r\n            }\r\n            if (nextDate && nextDate < afterDate) {\r\n                nextDate = new Date(nextDate.getTime() + hourinms);\r\n            }\r\n        }\r\n        return nextDate;\r\n    }\r\n    _next(date, after = true) {\r\n        const nextDate = this._nextYear(after ? date.copyWith({ second: date.second + 1 }) : date);\r\n        return {\r\n            cronosDate: nextDate,\r\n            date: nextDate ? nextDate.toDate(this.timezone) : null\r\n        };\r\n    }\r\n    nextNDates(afterDate = new Date(), n = 5) {\r\n        const dates = [];\r\n        let lastDate = afterDate;\r\n        for (let i = 0; i < n; i++) {\r\n            const date = this.nextDate(lastDate);\r\n            if (!date)\r\n                break;\r\n            lastDate = date;\r\n            dates.push(date);\r\n        }\r\n        return dates;\r\n    }\r\n    _nextYear(fromDate) {\r\n        let year = fromDate.year;\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            year = this.years.nextYear(year);\r\n            if (year === null)\r\n                return null;\r\n            nextDate = this._nextMonth((year === fromDate.year) ? fromDate : new CronosDate(year));\r\n            year++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMonth(fromDate) {\r\n        let nextMonthIndex = findFirstFrom(fromDate.month, this.months);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMonth = this.months[nextMonthIndex];\r\n            if (nextMonth === undefined)\r\n                return null;\r\n            nextDate = this._nextDay((nextMonth === fromDate.month) ? fromDate : new CronosDate(fromDate.year, nextMonth));\r\n            nextMonthIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextDay(fromDate) {\r\n        const days = this.days.getDays(fromDate.year, fromDate.month);\r\n        let nextDayIndex = findFirstFrom(fromDate.day, days);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextDay = days[nextDayIndex];\r\n            if (nextDay === undefined)\r\n                return null;\r\n            nextDate = this._nextHour((nextDay === fromDate.day) ? fromDate : new CronosDate(fromDate.year, fromDate.month, nextDay));\r\n            nextDayIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextHour(fromDate) {\r\n        let nextHourIndex = findFirstFrom(fromDate.hour, this.hours);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextHour = this.hours[nextHourIndex];\r\n            if (nextHour === undefined)\r\n                return null;\r\n            nextDate = this._nextMinute((nextHour === fromDate.hour) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, nextHour));\r\n            nextHourIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMinute(fromDate) {\r\n        let nextMinuteIndex = findFirstFrom(fromDate.minute, this.minutes);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMinute = this.minutes[nextMinuteIndex];\r\n            if (nextMinute === undefined)\r\n                return null;\r\n            nextDate = this._nextSecond((nextMinute === fromDate.minute) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, fromDate.hour, nextMinute));\r\n            nextMinuteIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextSecond(fromDate) {\r\n        const nextSecondIndex = findFirstFrom(fromDate.second, this.seconds), nextSecond = this.seconds[nextSecondIndex];\r\n        if (nextSecond === undefined)\r\n            return null;\r\n        return fromDate.copyWith({ second: nextSecond });\r\n    }\r\n}\r\n//# sourceMappingURL=expression.js.map","const maxTimeout = Math.pow(2, 31) - 1;\r\nconst scheduledTasks = [];\r\nlet runningTimer = null;\r\nfunction addTask(task) {\r\n    if (task['_timestamp']) {\r\n        const insertIndex = scheduledTasks.findIndex(t => (t['_timestamp'] || 0) < (task['_timestamp'] || 0));\r\n        if (insertIndex >= 0)\r\n            scheduledTasks.splice(insertIndex, 0, task);\r\n        else\r\n            scheduledTasks.push(task);\r\n    }\r\n}\r\nfunction removeTask(task) {\r\n    const removeIndex = scheduledTasks.indexOf(task);\r\n    if (removeIndex >= 0)\r\n        scheduledTasks.splice(removeIndex, 1);\r\n    if (scheduledTasks.length === 0 && runningTimer) {\r\n        clearTimeout(runningTimer);\r\n        runningTimer = null;\r\n    }\r\n}\r\nfunction runScheduledTasks() {\r\n    if (runningTimer)\r\n        clearTimeout(runningTimer);\r\n    const now = Date.now();\r\n    const removeIndex = scheduledTasks.findIndex(task => (task['_timestamp'] || 0) <= now);\r\n    const tasksToRun = removeIndex >= 0 ? scheduledTasks.splice(removeIndex) : [];\r\n    for (let task of tasksToRun) {\r\n        task['_runTask']();\r\n        if (task.isRunning) {\r\n            task['_updateTimestamp']();\r\n            addTask(task);\r\n        }\r\n    }\r\n    const nextTask = scheduledTasks[scheduledTasks.length - 1];\r\n    if (nextTask) {\r\n        runningTimer = setTimeout(runScheduledTasks, Math.min((nextTask['_timestamp'] || 0) - Date.now(), maxTimeout));\r\n    }\r\n    else\r\n        runningTimer = null;\r\n}\r\nclass DateArraySequence {\r\n    constructor(dateLikes) {\r\n        this._dates = dateLikes.map(dateLike => {\r\n            const date = new Date(dateLike);\r\n            if (isNaN(date.getTime()))\r\n                throw new Error('Invalid date');\r\n            return date;\r\n        }).sort((a, b) => a.getTime() - b.getTime());\r\n    }\r\n    nextDate(afterDate) {\r\n        const nextIndex = this._dates.findIndex(d => d > afterDate);\r\n        return nextIndex === -1 ? null : this._dates[nextIndex];\r\n    }\r\n}\r\nexport class CronosTask {\r\n    constructor(sequenceOrDates) {\r\n        this._listeners = {\r\n            'started': new Set(),\r\n            'stopped': new Set(),\r\n            'run': new Set(),\r\n            'ended': new Set(),\r\n        };\r\n        if (Array.isArray(sequenceOrDates))\r\n            this._sequence = new DateArraySequence(sequenceOrDates);\r\n        else if (typeof sequenceOrDates === 'string' ||\r\n            typeof sequenceOrDates === 'number' ||\r\n            sequenceOrDates instanceof Date)\r\n            this._sequence = new DateArraySequence([sequenceOrDates]);\r\n        else\r\n            this._sequence = sequenceOrDates;\r\n    }\r\n    start() {\r\n        this._updateTimestamp();\r\n        addTask(this);\r\n        runScheduledTasks();\r\n        if (this._timestamp)\r\n            this._emit('started');\r\n        return this;\r\n    }\r\n    stop() {\r\n        this._timestamp = undefined;\r\n        removeTask(this);\r\n        this._emit('stopped');\r\n        return this;\r\n    }\r\n    get nextRun() {\r\n        return this._timestamp ? new Date(this._timestamp) : undefined;\r\n    }\r\n    get isRunning() {\r\n        return !!this._timestamp;\r\n    }\r\n    _runTask() {\r\n        this._emit('run', this._timestamp);\r\n    }\r\n    _updateTimestamp() {\r\n        const nextDate = this._sequence.nextDate(this._timestamp ? new Date(this._timestamp) : new Date());\r\n        let timestamp = nextDate ? nextDate.getTime() : undefined;\r\n        if (this._timestamp && timestamp && timestamp < (this._timestamp + 1000))\r\n            timestamp = this._timestamp + 1000;\r\n        this._timestamp = timestamp;\r\n        if (!this._timestamp)\r\n            this._emit('ended');\r\n    }\r\n    on(event, listener) {\r\n        this._listeners[event].add(listener);\r\n        return this;\r\n    }\r\n    off(event, listener) {\r\n        this._listeners[event].delete(listener);\r\n        return this;\r\n    }\r\n    _emit(event, ...args) {\r\n        this._listeners[event].forEach((listener) => {\r\n            listener.call(this, ...args);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=scheduler.js.map","import { CronosExpression } from './expression';\r\nimport { CronosTask } from './scheduler';\r\nimport { CronosTimezone } from './date';\r\nexport function scheduleTask(cronString, task, options) {\r\n    const expression = CronosExpression.parse(cronString, options);\r\n    return new CronosTask(expression)\r\n        .on('run', task)\r\n        .start();\r\n}\r\nexport function validate(cronString) {\r\n    try {\r\n        CronosExpression.parse(cronString);\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport { CronosExpression, CronosTask, CronosTimezone };\r\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}