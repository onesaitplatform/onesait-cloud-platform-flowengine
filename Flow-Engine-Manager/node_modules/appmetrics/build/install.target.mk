# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := install
### Generated for copy rule.
$(srcdir)/appmetrics.node: TOOLSET := $(TOOLSET)
$(srcdir)/appmetrics.node: $(builddir)/appmetrics.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/appmetrics.node
$(srcdir)/heapdump.node: TOOLSET := $(TOOLSET)
$(srcdir)/heapdump.node: $(builddir)/heapdump.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/heapdump.node
$(srcdir)/libagentcore.so: TOOLSET := $(TOOLSET)
$(srcdir)/libagentcore.so: $(srcdir)/omr-agentcore/libagentcore.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/libagentcore.so
$(srcdir)/plugins/libnodeenvplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libnodeenvplugin.so: $(builddir)/libnodeenvplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libnodeenvplugin.so
$(srcdir)/plugins/libnodeheapplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libnodeheapplugin.so: $(builddir)/libnodeheapplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libnodeheapplugin.so
$(srcdir)/plugins/libnodegcplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libnodegcplugin.so: $(builddir)/libnodegcplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libnodegcplugin.so
$(srcdir)/plugins/libnodeprofplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libnodeprofplugin.so: $(builddir)/libnodeprofplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libnodeprofplugin.so
$(srcdir)/plugins/libnodeloopplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libnodeloopplugin.so: $(builddir)/libnodeloopplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libnodeloopplugin.so
$(srcdir)/plugins/libhcmqtt.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libhcmqtt.so: $(srcdir)/omr-agentcore/plugins/libhcmqtt.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libhcmqtt.so
$(srcdir)/plugins/libcpuplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libcpuplugin.so: $(srcdir)/omr-agentcore/plugins/libcpuplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libcpuplugin.so
$(srcdir)/plugins/libenvplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libenvplugin.so: $(srcdir)/omr-agentcore/plugins/libenvplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libenvplugin.so
$(srcdir)/plugins/libmemoryplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libmemoryplugin.so: $(srcdir)/omr-agentcore/plugins/libmemoryplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libmemoryplugin.so
$(srcdir)/plugins/libhcapiplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libhcapiplugin.so: $(srcdir)/omr-agentcore/plugins/libhcapiplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libhcapiplugin.so
$(srcdir)/plugins/libheadlessplugin.so: TOOLSET := $(TOOLSET)
$(srcdir)/plugins/libheadlessplugin.so: $(srcdir)/omr-agentcore/plugins/libheadlessplugin.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/plugins/libheadlessplugin.so
binding_gyp_install_target_copies = $(srcdir)/appmetrics.node $(srcdir)/heapdump.node $(srcdir)/libagentcore.so $(srcdir)/plugins/libnodeenvplugin.so $(srcdir)/plugins/libnodeheapplugin.so $(srcdir)/plugins/libnodegcplugin.so $(srcdir)/plugins/libnodeprofplugin.so $(srcdir)/plugins/libnodeloopplugin.so $(srcdir)/plugins/libhcmqtt.so $(srcdir)/plugins/libcpuplugin.so $(srcdir)/plugins/libenvplugin.so $(srcdir)/plugins/libmemoryplugin.so $(srcdir)/plugins/libhcapiplugin.so $(srcdir)/plugins/libheadlessplugin.so

### Rules for final target.
# Build our special outputs first.
$(obj).target/install.stamp: | $(binding_gyp_install_target_copies)

# Preserve order dependency of special output on deps.
$(binding_gyp_install_target_copies): | $(obj).target/omr-agentcore.stamp $(builddir)/heapdump.node $(builddir)/appmetrics.node $(builddir)/libnodeenvplugin.so $(builddir)/libnodegcplugin.so $(builddir)/libnodeprofplugin.so $(builddir)/libnodeloopplugin.so $(builddir)/libnodeheapplugin.so $(obj).target/libnodeenvplugin.so $(obj).target/libnodegcplugin.so $(obj).target/libnodeprofplugin.so $(obj).target/libnodeloopplugin.so $(obj).target/libnodeheapplugin.so

$(obj).target/install.stamp: TOOLSET := $(TOOLSET)
$(obj).target/install.stamp: $(obj).target/omr-agentcore.stamp $(builddir)/heapdump.node $(builddir)/appmetrics.node $(builddir)/libnodeenvplugin.so $(builddir)/libnodegcplugin.so $(builddir)/libnodeprofplugin.so $(builddir)/libnodeloopplugin.so $(builddir)/libnodeheapplugin.so $(obj).target/libnodeenvplugin.so $(obj).target/libnodegcplugin.so $(obj).target/libnodeprofplugin.so $(obj).target/libnodeloopplugin.so $(obj).target/libnodeheapplugin.so FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/install.stamp
# Add target alias
.PHONY: install
install: $(obj).target/install.stamp

# Add target alias to "all" target.
.PHONY: all
all: install

