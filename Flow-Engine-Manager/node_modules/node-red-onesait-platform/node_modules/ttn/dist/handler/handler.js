"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HandlerClient = undefined;

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _sourceMapSupport2 = require("source-map-support");

var _discovery = require("../discovery");

var _applications = require("../applications");

var _data = require("../data");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _sourceMapSupport2.install)(); // Copyright Â© 2017 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENSE file.

// Necessary to make gRPC work
process.env.GRPC_SSL_CIPHER_SUITES = _utils.MODERN_CIPHER_SUITES;

/**
 * `Handler` is a  client for The Things Network handler APIs.
 * It can be used to get data from an application or to manage devices.
 *
 * Example:
 * ```
 * const handler = new Handler("my-app-id", "my-app-access-key")
 * ```
 */

var HandlerClient = exports.HandlerClient = function () {

  /** @private */

  /** @private */
  function HandlerClient(appID, appAccessKey, opts) {
    (0, _classCallCheck3.default)(this, HandlerClient);

    this.appID = appID;
    this.appAccessKey = appAccessKey;
    this.discoveryOptions = opts;
  }

  /**
   * `open` opens the client to the handler.
   */


  /** @private */


  /** @private */


  (0, _createClass3.default)(HandlerClient, [{
    key: "open",
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
        var discovery;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.announcement) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", this);

              case 2:
                discovery = new _discovery.Discovery(this.discoveryOptions);
                _context.next = 5;
                return discovery.getByAppID(this.appID);

              case 5:
                this.announcement = _context.sent;
                return _context.abrupt("return", this);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function open() {
        return _ref.apply(this, arguments);
      }

      return open;
    }()

    /**
     * Open a data client that can be used to receive live application data
     */

  }, {
    key: "data",
    value: function data() {
      if (!this.announcement) {
        throw new Error("No handler configured, call open()!");
      }

      return new _data.DataClient(this.appID, this.appAccessKey, this.announcement.mqttAddress);
    }

    /**
     * Open a application manager that can be used to manage the settings and devices of the
     * application.
     */

  }, {
    key: "application",
    value: function application() {
      if (!this.announcement) {
        throw new Error("No handler configured, call discover() or configure() first!");
      }

      return new _applications.ApplicationClient(this.appID, this.appAccessKey, this.announcement.netAddress, this.announcement.certificate);
    }
  }]);
  return HandlerClient;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oYW5kbGVyL2hhbmRsZXIuanMiXSwibmFtZXMiOlsicHJvY2VzcyIsImVudiIsIkdSUENfU1NMX0NJUEhFUl9TVUlURVMiLCJIYW5kbGVyQ2xpZW50IiwiYXBwSUQiLCJhcHBBY2Nlc3NLZXkiLCJvcHRzIiwiZGlzY292ZXJ5T3B0aW9ucyIsImFubm91bmNlbWVudCIsImRpc2NvdmVyeSIsImdldEJ5QXBwSUQiLCJFcnJvciIsIm1xdHRBZGRyZXNzIiwibmV0QWRkcmVzcyIsImNlcnRpZmljYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0E7O0FBR0E7O0FBQ0E7O0FBRUE7Ozs7bUNBWEE7QUFDQTs7QUFZQTtBQUNBQSxRQUFRQyxHQUFSLENBQVlDLHNCQUFaOztBQUVBOzs7Ozs7Ozs7O0lBU2FDLGEsV0FBQUEsYTs7QUFPWDs7QUFOQTtBQVlBLHlCQUFhQyxLQUFiLEVBQTZCQyxZQUE3QixFQUFvREMsSUFBcEQsRUFBcUY7QUFBQTs7QUFDbkYsU0FBS0YsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQkEsWUFBcEI7QUFDQSxTQUFLRSxnQkFBTCxHQUF3QkQsSUFBeEI7QUFDRDs7QUFFRDs7Ozs7QUFUQTs7O0FBTkE7Ozs7Ozs7Ozs7OztxQkFtQk0sS0FBS0UsWTs7Ozs7aURBQ0EsSTs7O0FBR0hDLHlCLEdBQVkseUJBQWMsS0FBS0YsZ0JBQW5CLEM7O3VCQUNRRSxVQUFVQyxVQUFWLENBQXFCLEtBQUtOLEtBQTFCLEM7OztBQUExQixxQkFBS0ksWTtpREFDRSxJOzs7Ozs7Ozs7Ozs7Ozs7OztBQUdUOzs7Ozs7MkJBR3FCO0FBQ25CLFVBQUksQ0FBQyxLQUFLQSxZQUFWLEVBQXdCO0FBQ3RCLGNBQU0sSUFBSUcsS0FBSixDQUFVLHFDQUFWLENBQU47QUFDRDs7QUFFRCxhQUFPLHFCQUFlLEtBQUtQLEtBQXBCLEVBQTJCLEtBQUtDLFlBQWhDLEVBQThDLEtBQUtHLFlBQUwsQ0FBa0JJLFdBQWhFLENBQVA7QUFDRDs7QUFFRDs7Ozs7OztrQ0FJbUM7QUFDakMsVUFBSSxDQUFDLEtBQUtKLFlBQVYsRUFBd0I7QUFDdEIsY0FBTSxJQUFJRyxLQUFKLENBQVUsOERBQVYsQ0FBTjtBQUNEOztBQUVELGFBQU8sb0NBQXNCLEtBQUtQLEtBQTNCLEVBQWtDLEtBQUtDLFlBQXZDLEVBQXFELEtBQUtHLFlBQUwsQ0FBa0JLLFVBQXZFLEVBQW1GLEtBQUtMLFlBQUwsQ0FBa0JNLFdBQXJHLENBQVA7QUFDRCIsImZpbGUiOiJoYW5kbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IMKpIDIwMTcgVGhlIFRoaW5ncyBOZXR3b3JrXG4vLyBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTUlUIGxpY2Vuc2UgdGhhdCBjYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZS5cblxuLy8gQGZsb3dcblxuaW1wb3J0IHsgRGlzY292ZXJ5IH0gZnJvbSBcIi4uL2Rpc2NvdmVyeVwiXG5pbXBvcnQgdHlwZSB7IERpc2NvdmVyeU9wdGlvbnMsIEFubm91bmNlbWVudCB9IGZyb20gXCIuLi9kaXNjb3ZlcnlcIlxuXG5pbXBvcnQgeyBBcHBsaWNhdGlvbkNsaWVudCB9IGZyb20gXCIuLi9hcHBsaWNhdGlvbnNcIlxuaW1wb3J0IHsgRGF0YUNsaWVudCB9IGZyb20gXCIuLi9kYXRhXCJcblxuaW1wb3J0IHsgTU9ERVJOX0NJUEhFUl9TVUlURVMgfSBmcm9tIFwiLi4vdXRpbHNcIlxuXG4vLyBOZWNlc3NhcnkgdG8gbWFrZSBnUlBDIHdvcmtcbnByb2Nlc3MuZW52LkdSUENfU1NMX0NJUEhFUl9TVUlURVMgPSBNT0RFUk5fQ0lQSEVSX1NVSVRFU1xuXG4vKipcbiAqIGBIYW5kbGVyYCBpcyBhICBjbGllbnQgZm9yIFRoZSBUaGluZ3MgTmV0d29yayBoYW5kbGVyIEFQSXMuXG4gKiBJdCBjYW4gYmUgdXNlZCB0byBnZXQgZGF0YSBmcm9tIGFuIGFwcGxpY2F0aW9uIG9yIHRvIG1hbmFnZSBkZXZpY2VzLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGBcbiAqIGNvbnN0IGhhbmRsZXIgPSBuZXcgSGFuZGxlcihcIm15LWFwcC1pZFwiLCBcIm15LWFwcC1hY2Nlc3Mta2V5XCIpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEhhbmRsZXJDbGllbnQge1xuICAvKiogQHByaXZhdGUgKi9cbiAgYXBwSUQgOiBzdHJpbmdcblxuICAvKiogQHByaXZhdGUgKi9cbiAgYXBwQWNjZXNzS2V5IDogc3RyaW5nXG5cbiAgLyoqIEBwcml2YXRlICovXG4gIGRpc2NvdmVyeU9wdGlvbnMgOiA/RGlzY292ZXJ5T3B0aW9uc1xuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBhbm5vdW5jZW1lbnQgOiA/QW5ub3VuY2VtZW50XG5cbiAgY29uc3RydWN0b3IgKGFwcElEIDogc3RyaW5nLCBhcHBBY2Nlc3NLZXkgOiBzdHJpbmcsIG9wdHMgOiA/RGlzY292ZXJ5T3B0aW9ucykgOiB2b2lkIHtcbiAgICB0aGlzLmFwcElEID0gYXBwSURcbiAgICB0aGlzLmFwcEFjY2Vzc0tleSA9IGFwcEFjY2Vzc0tleVxuICAgIHRoaXMuZGlzY292ZXJ5T3B0aW9ucyA9IG9wdHNcbiAgfVxuXG4gIC8qKlxuICAgKiBgb3BlbmAgb3BlbnMgdGhlIGNsaWVudCB0byB0aGUgaGFuZGxlci5cbiAgICovXG4gIGFzeW5jIG9wZW4gKCkgOiBQcm9taXNlPEhhbmRsZXJDbGllbnQ+IHtcbiAgICBpZiAodGhpcy5hbm5vdW5jZW1lbnQpIHtcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuXG4gICAgY29uc3QgZGlzY292ZXJ5ID0gbmV3IERpc2NvdmVyeSh0aGlzLmRpc2NvdmVyeU9wdGlvbnMpXG4gICAgdGhpcy5hbm5vdW5jZW1lbnQgPSBhd2FpdCBkaXNjb3ZlcnkuZ2V0QnlBcHBJRCh0aGlzLmFwcElEKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICAvKipcbiAgICogT3BlbiBhIGRhdGEgY2xpZW50IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVjZWl2ZSBsaXZlIGFwcGxpY2F0aW9uIGRhdGFcbiAgICovXG4gIGRhdGEgKCkgOiBEYXRhQ2xpZW50IHtcbiAgICBpZiAoIXRoaXMuYW5ub3VuY2VtZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBoYW5kbGVyIGNvbmZpZ3VyZWQsIGNhbGwgb3BlbigpIVwiKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgRGF0YUNsaWVudCh0aGlzLmFwcElELCB0aGlzLmFwcEFjY2Vzc0tleSwgdGhpcy5hbm5vdW5jZW1lbnQubXF0dEFkZHJlc3MpXG4gIH1cblxuICAvKipcbiAgICogT3BlbiBhIGFwcGxpY2F0aW9uIG1hbmFnZXIgdGhhdCBjYW4gYmUgdXNlZCB0byBtYW5hZ2UgdGhlIHNldHRpbmdzIGFuZCBkZXZpY2VzIG9mIHRoZVxuICAgKiBhcHBsaWNhdGlvbi5cbiAgICovXG4gIGFwcGxpY2F0aW9uICgpIDogQXBwbGljYXRpb25DbGllbnQge1xuICAgIGlmICghdGhpcy5hbm5vdW5jZW1lbnQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGhhbmRsZXIgY29uZmlndXJlZCwgY2FsbCBkaXNjb3ZlcigpIG9yIGNvbmZpZ3VyZSgpIGZpcnN0IVwiKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQXBwbGljYXRpb25DbGllbnQodGhpcy5hcHBJRCwgdGhpcy5hcHBBY2Nlc3NLZXksIHRoaXMuYW5ub3VuY2VtZW50Lm5ldEFkZHJlc3MsIHRoaXMuYW5ub3VuY2VtZW50LmNlcnRpZmljYXRlKVxuICB9XG59XG4iXX0=